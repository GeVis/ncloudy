# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := libzk
### Rules for action "build_zk_client_lib":
quiet_cmd_binding_gyp_libzk_target_build_zk_client_lib = ACTION binding_gyp_libzk_target_build_zk_client_lib $@
cmd_binding_gyp_libzk_target_build_zk_client_lib = LD_LIBRARY_PATH=$(builddir)/lib.host:$(builddir)/lib.target:$$LD_LIBRARY_PATH; export LD_LIBRARY_PATH; cd $(srcdir)/.; sh scripts/build.sh

.: obj := $(abs_obj)
.: builddir := $(abs_builddir)
.: export BUILT_PRODUCTS_DIR := ${abs_builddir}
.: export CONFIGURATION := ${BUILDTYPE}
.: export PRODUCT_NAME := libzk
.: export SDKROOT := /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk
.: export SRCROOT := ${abs_srcdir}/
.: export SOURCE_ROOT := ${SRCROOT}
.: export TARGET_BUILD_DIR := ${abs_builddir}
.: export TEMP_DIR := ${TMPDIR}
.: TOOLSET := $(TOOLSET)
.: $(srcdir)/. FORCE_DO_CMD
	$(call do_cmd,binding_gyp_libzk_target_build_zk_client_lib)

all_deps += .
action_binding_gyp_libzk_target_build_zk_client_lib_outputs := .


### Rules for final target.
# Build our special outputs first.
$(obj).target/libzk.stamp: | $(action_binding_gyp_libzk_target_build_zk_client_lib_outputs)

# Preserve order dependency of special output on deps.
$(action_binding_gyp_libzk_target_build_zk_client_lib_outputs): | 

$(obj).target/libzk.stamp: TOOLSET := $(TOOLSET)
$(obj).target/libzk.stamp:  FORCE_DO_CMD
	$(call do_cmd,touch)

all_deps += $(obj).target/libzk.stamp
# Add target alias
.PHONY: libzk
libzk: $(obj).target/libzk.stamp

# Add target alias to "all" target.
.PHONY: all
all: libzk

